#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebApiGestaoEscolar
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="GestaoEscolarDB")]
	public partial class EscolaDataContext: System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAluno(Aluno instance);
    partial void UpdateAluno(Aluno instance);
    partial void DeleteAluno(Aluno instance);
    partial void InsertDisciplina(Disciplina instance);
    partial void UpdateDisciplina(Disciplina instance);
    partial void DeleteDisciplina(Disciplina instance);
    partial void InsertDisciplinaTurma(DisciplinaTurma instance);
    partial void UpdateDisciplinaTurma(DisciplinaTurma instance);
    partial void DeleteDisciplinaTurma(DisciplinaTurma instance);
    partial void InsertEvento(Evento instance);
    partial void UpdateEvento(Evento instance);
    partial void DeleteEvento(Evento instance);
    partial void InsertHorario(Horario instance);
    partial void UpdateHorario(Horario instance);
    partial void DeleteHorario(Horario instance);
    partial void InsertMediasFinai(MediasFinai instance);
    partial void UpdateMediasFinai(MediasFinai instance);
    partial void DeleteMediasFinai(MediasFinai instance);
    partial void InsertNota(Nota instance);
    partial void UpdateNota(Nota instance);
    partial void DeleteNota(Nota instance);
    partial void InsertParticipacoesEvento(ParticipacoesEvento instance);
    partial void UpdateParticipacoesEvento(ParticipacoesEvento instance);
    partial void DeleteParticipacoesEvento(ParticipacoesEvento instance);
    partial void InsertPauta(Pauta instance);
    partial void UpdatePauta(Pauta instance);
    partial void DeletePauta(Pauta instance);
    partial void InsertProfessorDisciplina(ProfessorDisciplina instance);
    partial void UpdateProfessorDisciplina(ProfessorDisciplina instance);
    partial void DeleteProfessorDisciplina(ProfessorDisciplina instance);
    partial void InsertProfessorTurma(ProfessorTurma instance);
    partial void UpdateProfessorTurma(ProfessorTurma instance);
    partial void DeleteProfessorTurma(ProfessorTurma instance);
    partial void InsertTurma(Turma instance);
    partial void UpdateTurma(Turma instance);
    partial void DeleteTurma(Turma instance);
    partial void InsertProfessore(Professore instance);
    partial void UpdateProfessore(Professore instance);
    partial void DeleteProfessore(Professore instance);
    #endregion
		
		public EscolaDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public EscolaDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public EscolaDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public EscolaDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Aluno> Alunos
		{
			get
			{
				return this.GetTable<Aluno>();
			}
		}
		
		public System.Data.Linq.Table<Disciplina> Disciplinas
		{
			get
			{
				return this.GetTable<Disciplina>();
			}
		}
		
		public System.Data.Linq.Table<DisciplinaTurma> DisciplinaTurmas
		{
			get
			{
				return this.GetTable<DisciplinaTurma>();
			}
		}
		
		public System.Data.Linq.Table<Evento> Eventos
		{
			get
			{
				return this.GetTable<Evento>();
			}
		}
		
		public System.Data.Linq.Table<Horario> Horarios
		{
			get
			{
				return this.GetTable<Horario>();
			}
		}
		
		public System.Data.Linq.Table<MediasFinai> MediasFinais
		{
			get
			{
				return this.GetTable<MediasFinai>();
			}
		}
		
		public System.Data.Linq.Table<Nota> Notas
		{
			get
			{
				return this.GetTable<Nota>();
			}
		}
		
		public System.Data.Linq.Table<ParticipacoesEvento> ParticipacoesEventos
		{
			get
			{
				return this.GetTable<ParticipacoesEvento>();
			}
		}
		
		public System.Data.Linq.Table<Pauta> Pautas
		{
			get
			{
				return this.GetTable<Pauta>();
			}
		}
		
		public System.Data.Linq.Table<ProfessorDisciplina> ProfessorDisciplinas
		{
			get
			{
				return this.GetTable<ProfessorDisciplina>();
			}
		}
		
		public System.Data.Linq.Table<ProfessorTurma> ProfessorTurmas
		{
			get
			{
				return this.GetTable<ProfessorTurma>();
			}
		}
		
		public System.Data.Linq.Table<Turma> Turmas
		{
			get
			{
				return this.GetTable<Turma>();
			}
		}
		
		public System.Data.Linq.Table<Professore> Professores
		{
			get
			{
				return this.GetTable<Professore>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Alunos")]
	public partial class Aluno : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Nome;
		
		private System.Nullable<System.DateTime> _DataNascimento;
		
		private string _Contacto;
		
		private string _Morada;
		
		private string _Email;
		
		private System.Nullable<int> _TurmaId;
		
		private EntitySet<MediasFinai> _MediasFinais;
		
		private EntitySet<Nota> _Notas;
		
		private EntitySet<ParticipacoesEvento> _ParticipacoesEventos;
		
		private EntitySet<Pauta> _Pautas;
		
		private EntityRef<Turma> _Turma;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNomeChanging(string value);
    partial void OnNomeChanged();
    partial void OnDataNascimentoChanging(System.Nullable<System.DateTime> value);
    partial void OnDataNascimentoChanged();
    partial void OnContactoChanging(string value);
    partial void OnContactoChanged();
    partial void OnMoradaChanging(string value);
    partial void OnMoradaChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnTurmaIdChanging(System.Nullable<int> value);
    partial void OnTurmaIdChanged();
    #endregion
		
		public Aluno()
		{
			this._MediasFinais = new EntitySet<MediasFinai>(new Action<MediasFinai>(this.attach_MediasFinais), new Action<MediasFinai>(this.detach_MediasFinais));
			this._Notas = new EntitySet<Nota>(new Action<Nota>(this.attach_Notas), new Action<Nota>(this.detach_Notas));
			this._ParticipacoesEventos = new EntitySet<ParticipacoesEvento>(new Action<ParticipacoesEvento>(this.attach_ParticipacoesEventos), new Action<ParticipacoesEvento>(this.detach_ParticipacoesEventos));
			this._Pautas = new EntitySet<Pauta>(new Action<Pauta>(this.attach_Pautas), new Action<Pauta>(this.detach_Pautas));
			this._Turma = default(EntityRef<Turma>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nome", DbType="NVarChar(100)")]
		public string Nome
		{
			get
			{
				return this._Nome;
			}
			set
			{
				if ((this._Nome != value))
				{
					this.OnNomeChanging(value);
					this.SendPropertyChanging();
					this._Nome = value;
					this.SendPropertyChanged("Nome");
					this.OnNomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataNascimento", DbType="Date")]
		public System.Nullable<System.DateTime> DataNascimento
		{
			get
			{
				return this._DataNascimento;
			}
			set
			{
				if ((this._DataNascimento != value))
				{
					this.OnDataNascimentoChanging(value);
					this.SendPropertyChanging();
					this._DataNascimento = value;
					this.SendPropertyChanged("DataNascimento");
					this.OnDataNascimentoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Contacto", DbType="NVarChar(20)")]
		public string Contacto
		{
			get
			{
				return this._Contacto;
			}
			set
			{
				if ((this._Contacto != value))
				{
					this.OnContactoChanging(value);
					this.SendPropertyChanging();
					this._Contacto = value;
					this.SendPropertyChanged("Contacto");
					this.OnContactoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Morada", DbType="NVarChar(255)")]
		public string Morada
		{
			get
			{
				return this._Morada;
			}
			set
			{
				if ((this._Morada != value))
				{
					this.OnMoradaChanging(value);
					this.SendPropertyChanging();
					this._Morada = value;
					this.SendPropertyChanged("Morada");
					this.OnMoradaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(100)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TurmaId", DbType="Int")]
		public System.Nullable<int> TurmaId
		{
			get
			{
				return this._TurmaId;
			}
			set
			{
				if ((this._TurmaId != value))
				{
					if (this._Turma.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTurmaIdChanging(value);
					this.SendPropertyChanging();
					this._TurmaId = value;
					this.SendPropertyChanged("TurmaId");
					this.OnTurmaIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Aluno_MediasFinai", Storage="_MediasFinais", ThisKey="Id", OtherKey="AlunoId")]
		public EntitySet<MediasFinai> MediasFinais
		{
			get
			{
				return this._MediasFinais;
			}
			set
			{
				this._MediasFinais.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Aluno_Nota", Storage="_Notas", ThisKey="Id", OtherKey="AlunoId")]
		public EntitySet<Nota> Notas
		{
			get
			{
				return this._Notas;
			}
			set
			{
				this._Notas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Aluno_ParticipacoesEvento", Storage="_ParticipacoesEventos", ThisKey="Id", OtherKey="AlunoId")]
		public EntitySet<ParticipacoesEvento> ParticipacoesEventos
		{
			get
			{
				return this._ParticipacoesEventos;
			}
			set
			{
				this._ParticipacoesEventos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Aluno_Pauta", Storage="_Pautas", ThisKey="Id", OtherKey="AlunoId")]
		public EntitySet<Pauta> Pautas
		{
			get
			{
				return this._Pautas;
			}
			set
			{
				this._Pautas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Turma_Aluno", Storage="_Turma", ThisKey="TurmaId", OtherKey="Id", IsForeignKey=true)]
		public Turma Turma
		{
			get
			{
				return this._Turma.Entity;
			}
			set
			{
				Turma previousValue = this._Turma.Entity;
				if (((previousValue != value) 
							|| (this._Turma.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Turma.Entity = null;
						previousValue.Alunos.Remove(this);
					}
					this._Turma.Entity = value;
					if ((value != null))
					{
						value.Alunos.Add(this);
						this._TurmaId = value.Id;
					}
					else
					{
						this._TurmaId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Turma");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MediasFinais(MediasFinai entity)
		{
			this.SendPropertyChanging();
			entity.Aluno = this;
		}
		
		private void detach_MediasFinais(MediasFinai entity)
		{
			this.SendPropertyChanging();
			entity.Aluno = null;
		}
		
		private void attach_Notas(Nota entity)
		{
			this.SendPropertyChanging();
			entity.Aluno = this;
		}
		
		private void detach_Notas(Nota entity)
		{
			this.SendPropertyChanging();
			entity.Aluno = null;
		}
		
		private void attach_ParticipacoesEventos(ParticipacoesEvento entity)
		{
			this.SendPropertyChanging();
			entity.Aluno = this;
		}
		
		private void detach_ParticipacoesEventos(ParticipacoesEvento entity)
		{
			this.SendPropertyChanging();
			entity.Aluno = null;
		}
		
		private void attach_Pautas(Pauta entity)
		{
			this.SendPropertyChanging();
			entity.Aluno = this;
		}
		
		private void detach_Pautas(Pauta entity)
		{
			this.SendPropertyChanging();
			entity.Aluno = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Disciplinas")]
	public partial class Disciplina : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Nome;
		
		private System.Nullable<int> _CargaHorariaSemanal;
		
		private EntitySet<DisciplinaTurma> _DisciplinaTurmas;
		
		private EntitySet<Horario> _Horarios;
		
		private EntitySet<MediasFinai> _MediasFinais;
		
		private EntitySet<Nota> _Notas;
		
		private EntitySet<ProfessorDisciplina> _ProfessorDisciplinas;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNomeChanging(string value);
    partial void OnNomeChanged();
    partial void OnCargaHorariaSemanalChanging(System.Nullable<int> value);
    partial void OnCargaHorariaSemanalChanged();
    #endregion
		
		public Disciplina()
		{
			this._DisciplinaTurmas = new EntitySet<DisciplinaTurma>(new Action<DisciplinaTurma>(this.attach_DisciplinaTurmas), new Action<DisciplinaTurma>(this.detach_DisciplinaTurmas));
			this._Horarios = new EntitySet<Horario>(new Action<Horario>(this.attach_Horarios), new Action<Horario>(this.detach_Horarios));
			this._MediasFinais = new EntitySet<MediasFinai>(new Action<MediasFinai>(this.attach_MediasFinais), new Action<MediasFinai>(this.detach_MediasFinais));
			this._Notas = new EntitySet<Nota>(new Action<Nota>(this.attach_Notas), new Action<Nota>(this.detach_Notas));
			this._ProfessorDisciplinas = new EntitySet<ProfessorDisciplina>(new Action<ProfessorDisciplina>(this.attach_ProfessorDisciplinas), new Action<ProfessorDisciplina>(this.detach_ProfessorDisciplinas));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nome", DbType="NVarChar(100)")]
		public string Nome
		{
			get
			{
				return this._Nome;
			}
			set
			{
				if ((this._Nome != value))
				{
					this.OnNomeChanging(value);
					this.SendPropertyChanging();
					this._Nome = value;
					this.SendPropertyChanged("Nome");
					this.OnNomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CargaHorariaSemanal", DbType="Int")]
		public System.Nullable<int> CargaHorariaSemanal
		{
			get
			{
				return this._CargaHorariaSemanal;
			}
			set
			{
				if ((this._CargaHorariaSemanal != value))
				{
					this.OnCargaHorariaSemanalChanging(value);
					this.SendPropertyChanging();
					this._CargaHorariaSemanal = value;
					this.SendPropertyChanged("CargaHorariaSemanal");
					this.OnCargaHorariaSemanalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Disciplina_DisciplinaTurma", Storage="_DisciplinaTurmas", ThisKey="Id", OtherKey="DisciplinaId")]
		public EntitySet<DisciplinaTurma> DisciplinaTurmas
		{
			get
			{
				return this._DisciplinaTurmas;
			}
			set
			{
				this._DisciplinaTurmas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Disciplina_Horario", Storage="_Horarios", ThisKey="Id", OtherKey="DisciplinaId")]
		public EntitySet<Horario> Horarios
		{
			get
			{
				return this._Horarios;
			}
			set
			{
				this._Horarios.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Disciplina_MediasFinai", Storage="_MediasFinais", ThisKey="Id", OtherKey="DisciplinaId")]
		public EntitySet<MediasFinai> MediasFinais
		{
			get
			{
				return this._MediasFinais;
			}
			set
			{
				this._MediasFinais.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Disciplina_Nota", Storage="_Notas", ThisKey="Id", OtherKey="DisciplinaId")]
		public EntitySet<Nota> Notas
		{
			get
			{
				return this._Notas;
			}
			set
			{
				this._Notas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Disciplina_ProfessorDisciplina", Storage="_ProfessorDisciplinas", ThisKey="Id", OtherKey="DisciplinaId")]
		public EntitySet<ProfessorDisciplina> ProfessorDisciplinas
		{
			get
			{
				return this._ProfessorDisciplinas;
			}
			set
			{
				this._ProfessorDisciplinas.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DisciplinaTurmas(DisciplinaTurma entity)
		{
			this.SendPropertyChanging();
			entity.Disciplina = this;
		}
		
		private void detach_DisciplinaTurmas(DisciplinaTurma entity)
		{
			this.SendPropertyChanging();
			entity.Disciplina = null;
		}
		
		private void attach_Horarios(Horario entity)
		{
			this.SendPropertyChanging();
			entity.Disciplina = this;
		}
		
		private void detach_Horarios(Horario entity)
		{
			this.SendPropertyChanging();
			entity.Disciplina = null;
		}
		
		private void attach_MediasFinais(MediasFinai entity)
		{
			this.SendPropertyChanging();
			entity.Disciplina = this;
		}
		
		private void detach_MediasFinais(MediasFinai entity)
		{
			this.SendPropertyChanging();
			entity.Disciplina = null;
		}
		
		private void attach_Notas(Nota entity)
		{
			this.SendPropertyChanging();
			entity.Disciplina = this;
		}
		
		private void detach_Notas(Nota entity)
		{
			this.SendPropertyChanging();
			entity.Disciplina = null;
		}
		
		private void attach_ProfessorDisciplinas(ProfessorDisciplina entity)
		{
			this.SendPropertyChanging();
			entity.Disciplina = this;
		}
		
		private void detach_ProfessorDisciplinas(ProfessorDisciplina entity)
		{
			this.SendPropertyChanging();
			entity.Disciplina = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DisciplinaTurma")]
	public partial class DisciplinaTurma : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _DisciplinaId;
		
		private System.Nullable<int> _TurmaId;
		
		private EntityRef<Disciplina> _Disciplina;
		
		private EntityRef<Turma> _Turma;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnDisciplinaIdChanging(System.Nullable<int> value);
    partial void OnDisciplinaIdChanged();
    partial void OnTurmaIdChanging(System.Nullable<int> value);
    partial void OnTurmaIdChanged();
    #endregion
		
		public DisciplinaTurma()
		{
			this._Disciplina = default(EntityRef<Disciplina>);
			this._Turma = default(EntityRef<Turma>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisciplinaId", DbType="Int")]
		public System.Nullable<int> DisciplinaId
		{
			get
			{
				return this._DisciplinaId;
			}
			set
			{
				if ((this._DisciplinaId != value))
				{
					if (this._Disciplina.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDisciplinaIdChanging(value);
					this.SendPropertyChanging();
					this._DisciplinaId = value;
					this.SendPropertyChanged("DisciplinaId");
					this.OnDisciplinaIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TurmaId", DbType="Int")]
		public System.Nullable<int> TurmaId
		{
			get
			{
				return this._TurmaId;
			}
			set
			{
				if ((this._TurmaId != value))
				{
					if (this._Turma.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTurmaIdChanging(value);
					this.SendPropertyChanging();
					this._TurmaId = value;
					this.SendPropertyChanged("TurmaId");
					this.OnTurmaIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Disciplina_DisciplinaTurma", Storage="_Disciplina", ThisKey="DisciplinaId", OtherKey="Id", IsForeignKey=true)]
		public Disciplina Disciplina
		{
			get
			{
				return this._Disciplina.Entity;
			}
			set
			{
				Disciplina previousValue = this._Disciplina.Entity;
				if (((previousValue != value) 
							|| (this._Disciplina.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Disciplina.Entity = null;
						previousValue.DisciplinaTurmas.Remove(this);
					}
					this._Disciplina.Entity = value;
					if ((value != null))
					{
						value.DisciplinaTurmas.Add(this);
						this._DisciplinaId = value.Id;
					}
					else
					{
						this._DisciplinaId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Disciplina");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Turma_DisciplinaTurma", Storage="_Turma", ThisKey="TurmaId", OtherKey="Id", IsForeignKey=true)]
		public Turma Turma
		{
			get
			{
				return this._Turma.Entity;
			}
			set
			{
				Turma previousValue = this._Turma.Entity;
				if (((previousValue != value) 
							|| (this._Turma.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Turma.Entity = null;
						previousValue.DisciplinaTurmas.Remove(this);
					}
					this._Turma.Entity = value;
					if ((value != null))
					{
						value.DisciplinaTurmas.Add(this);
						this._TurmaId = value.Id;
					}
					else
					{
						this._TurmaId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Turma");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Eventos")]
	public partial class Evento : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Nome;
		
		private System.Nullable<System.DateTime> _Data;
		
		private string _Local;
		
		private string _Descricao;
		
		private EntitySet<ParticipacoesEvento> _ParticipacoesEventos;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNomeChanging(string value);
    partial void OnNomeChanged();
    partial void OnDataChanging(System.Nullable<System.DateTime> value);
    partial void OnDataChanged();
    partial void OnLocalChanging(string value);
    partial void OnLocalChanged();
    partial void OnDescricaoChanging(string value);
    partial void OnDescricaoChanged();
    #endregion
		
		public Evento()
		{
			this._ParticipacoesEventos = new EntitySet<ParticipacoesEvento>(new Action<ParticipacoesEvento>(this.attach_ParticipacoesEventos), new Action<ParticipacoesEvento>(this.detach_ParticipacoesEventos));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nome", DbType="NVarChar(100)")]
		public string Nome
		{
			get
			{
				return this._Nome;
			}
			set
			{
				if ((this._Nome != value))
				{
					this.OnNomeChanging(value);
					this.SendPropertyChanging();
					this._Nome = value;
					this.SendPropertyChanged("Nome");
					this.OnNomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data", DbType="Date")]
		public System.Nullable<System.DateTime> Data
		{
			get
			{
				return this._Data;
			}
			set
			{
				if ((this._Data != value))
				{
					this.OnDataChanging(value);
					this.SendPropertyChanging();
					this._Data = value;
					this.SendPropertyChanged("Data");
					this.OnDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Local", DbType="NVarChar(100)")]
		public string Local
		{
			get
			{
				return this._Local;
			}
			set
			{
				if ((this._Local != value))
				{
					this.OnLocalChanging(value);
					this.SendPropertyChanging();
					this._Local = value;
					this.SendPropertyChanged("Local");
					this.OnLocalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descricao", DbType="NVarChar(255)")]
		public string Descricao
		{
			get
			{
				return this._Descricao;
			}
			set
			{
				if ((this._Descricao != value))
				{
					this.OnDescricaoChanging(value);
					this.SendPropertyChanging();
					this._Descricao = value;
					this.SendPropertyChanged("Descricao");
					this.OnDescricaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Evento_ParticipacoesEvento", Storage="_ParticipacoesEventos", ThisKey="Id", OtherKey="EventoId")]
		public EntitySet<ParticipacoesEvento> ParticipacoesEventos
		{
			get
			{
				return this._ParticipacoesEventos;
			}
			set
			{
				this._ParticipacoesEventos.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ParticipacoesEventos(ParticipacoesEvento entity)
		{
			this.SendPropertyChanging();
			entity.Evento = this;
		}
		
		private void detach_ParticipacoesEventos(ParticipacoesEvento entity)
		{
			this.SendPropertyChanging();
			entity.Evento = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Horarios")]
	public partial class Horario : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _TurmaId;
		
		private System.Nullable<int> _DisciplinaId;
		
		private System.Nullable<int> _ProfessorId;
		
		private string _DiaSemana;
		
		private System.Nullable<System.TimeSpan> _HoraInicio;
		
		private System.Nullable<System.TimeSpan> _HoraFim;
		
		private EntityRef<Disciplina> _Disciplina;
		
		private EntityRef<Turma> _Turma;
		
		private EntityRef<Professore> _Professore;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTurmaIdChanging(System.Nullable<int> value);
    partial void OnTurmaIdChanged();
    partial void OnDisciplinaIdChanging(System.Nullable<int> value);
    partial void OnDisciplinaIdChanged();
    partial void OnProfessorIdChanging(System.Nullable<int> value);
    partial void OnProfessorIdChanged();
    partial void OnDiaSemanaChanging(string value);
    partial void OnDiaSemanaChanged();
    partial void OnHoraInicioChanging(System.Nullable<System.TimeSpan> value);
    partial void OnHoraInicioChanged();
    partial void OnHoraFimChanging(System.Nullable<System.TimeSpan> value);
    partial void OnHoraFimChanged();
    #endregion
		
		public Horario()
		{
			this._Disciplina = default(EntityRef<Disciplina>);
			this._Turma = default(EntityRef<Turma>);
			this._Professore = default(EntityRef<Professore>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TurmaId", DbType="Int")]
		public System.Nullable<int> TurmaId
		{
			get
			{
				return this._TurmaId;
			}
			set
			{
				if ((this._TurmaId != value))
				{
					if (this._Turma.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTurmaIdChanging(value);
					this.SendPropertyChanging();
					this._TurmaId = value;
					this.SendPropertyChanged("TurmaId");
					this.OnTurmaIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisciplinaId", DbType="Int")]
		public System.Nullable<int> DisciplinaId
		{
			get
			{
				return this._DisciplinaId;
			}
			set
			{
				if ((this._DisciplinaId != value))
				{
					if (this._Disciplina.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDisciplinaIdChanging(value);
					this.SendPropertyChanging();
					this._DisciplinaId = value;
					this.SendPropertyChanged("DisciplinaId");
					this.OnDisciplinaIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProfessorId", DbType="Int")]
		public System.Nullable<int> ProfessorId
		{
			get
			{
				return this._ProfessorId;
			}
			set
			{
				if ((this._ProfessorId != value))
				{
					if (this._Professore.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProfessorIdChanging(value);
					this.SendPropertyChanging();
					this._ProfessorId = value;
					this.SendPropertyChanged("ProfessorId");
					this.OnProfessorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaSemana", DbType="NVarChar(20)")]
		public string DiaSemana
		{
			get
			{
				return this._DiaSemana;
			}
			set
			{
				if ((this._DiaSemana != value))
				{
					this.OnDiaSemanaChanging(value);
					this.SendPropertyChanging();
					this._DiaSemana = value;
					this.SendPropertyChanged("DiaSemana");
					this.OnDiaSemanaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoraInicio", DbType="Time")]
		public System.Nullable<System.TimeSpan> HoraInicio
		{
			get
			{
				return this._HoraInicio;
			}
			set
			{
				if ((this._HoraInicio != value))
				{
					this.OnHoraInicioChanging(value);
					this.SendPropertyChanging();
					this._HoraInicio = value;
					this.SendPropertyChanged("HoraInicio");
					this.OnHoraInicioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoraFim", DbType="Time")]
		public System.Nullable<System.TimeSpan> HoraFim
		{
			get
			{
				return this._HoraFim;
			}
			set
			{
				if ((this._HoraFim != value))
				{
					this.OnHoraFimChanging(value);
					this.SendPropertyChanging();
					this._HoraFim = value;
					this.SendPropertyChanged("HoraFim");
					this.OnHoraFimChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Disciplina_Horario", Storage="_Disciplina", ThisKey="DisciplinaId", OtherKey="Id", IsForeignKey=true)]
		public Disciplina Disciplina
		{
			get
			{
				return this._Disciplina.Entity;
			}
			set
			{
				Disciplina previousValue = this._Disciplina.Entity;
				if (((previousValue != value) 
							|| (this._Disciplina.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Disciplina.Entity = null;
						previousValue.Horarios.Remove(this);
					}
					this._Disciplina.Entity = value;
					if ((value != null))
					{
						value.Horarios.Add(this);
						this._DisciplinaId = value.Id;
					}
					else
					{
						this._DisciplinaId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Disciplina");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Turma_Horario", Storage="_Turma", ThisKey="TurmaId", OtherKey="Id", IsForeignKey=true)]
		public Turma Turma
		{
			get
			{
				return this._Turma.Entity;
			}
			set
			{
				Turma previousValue = this._Turma.Entity;
				if (((previousValue != value) 
							|| (this._Turma.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Turma.Entity = null;
						previousValue.Horarios.Remove(this);
					}
					this._Turma.Entity = value;
					if ((value != null))
					{
						value.Horarios.Add(this);
						this._TurmaId = value.Id;
					}
					else
					{
						this._TurmaId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Turma");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Professore_Horario", Storage="_Professore", ThisKey="ProfessorId", OtherKey="Id", IsForeignKey=true)]
		public Professore Professore
		{
			get
			{
				return this._Professore.Entity;
			}
			set
			{
				Professore previousValue = this._Professore.Entity;
				if (((previousValue != value) 
							|| (this._Professore.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Professore.Entity = null;
						previousValue.Horarios.Remove(this);
					}
					this._Professore.Entity = value;
					if ((value != null))
					{
						value.Horarios.Add(this);
						this._ProfessorId = value.Id;
					}
					else
					{
						this._ProfessorId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Professore");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MediasFinais")]
	public partial class MediasFinai : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _AlunoId;
		
		private System.Nullable<int> _DisciplinaId;
		
		private System.Nullable<double> _Media;
		
		private EntityRef<Aluno> _Aluno;
		
		private EntityRef<Disciplina> _Disciplina;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnAlunoIdChanging(System.Nullable<int> value);
    partial void OnAlunoIdChanged();
    partial void OnDisciplinaIdChanging(System.Nullable<int> value);
    partial void OnDisciplinaIdChanged();
    partial void OnMediaChanging(System.Nullable<double> value);
    partial void OnMediaChanged();
    #endregion
		
		public MediasFinai()
		{
			this._Aluno = default(EntityRef<Aluno>);
			this._Disciplina = default(EntityRef<Disciplina>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AlunoId", DbType="Int")]
		public System.Nullable<int> AlunoId
		{
			get
			{
				return this._AlunoId;
			}
			set
			{
				if ((this._AlunoId != value))
				{
					if (this._Aluno.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAlunoIdChanging(value);
					this.SendPropertyChanging();
					this._AlunoId = value;
					this.SendPropertyChanged("AlunoId");
					this.OnAlunoIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisciplinaId", DbType="Int")]
		public System.Nullable<int> DisciplinaId
		{
			get
			{
				return this._DisciplinaId;
			}
			set
			{
				if ((this._DisciplinaId != value))
				{
					if (this._Disciplina.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDisciplinaIdChanging(value);
					this.SendPropertyChanging();
					this._DisciplinaId = value;
					this.SendPropertyChanged("DisciplinaId");
					this.OnDisciplinaIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Media", DbType="Float")]
		public System.Nullable<double> Media
		{
			get
			{
				return this._Media;
			}
			set
			{
				if ((this._Media != value))
				{
					this.OnMediaChanging(value);
					this.SendPropertyChanging();
					this._Media = value;
					this.SendPropertyChanged("Media");
					this.OnMediaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Aluno_MediasFinai", Storage="_Aluno", ThisKey="AlunoId", OtherKey="Id", IsForeignKey=true)]
		public Aluno Aluno
		{
			get
			{
				return this._Aluno.Entity;
			}
			set
			{
				Aluno previousValue = this._Aluno.Entity;
				if (((previousValue != value) 
							|| (this._Aluno.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Aluno.Entity = null;
						previousValue.MediasFinais.Remove(this);
					}
					this._Aluno.Entity = value;
					if ((value != null))
					{
						value.MediasFinais.Add(this);
						this._AlunoId = value.Id;
					}
					else
					{
						this._AlunoId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Aluno");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Disciplina_MediasFinai", Storage="_Disciplina", ThisKey="DisciplinaId", OtherKey="Id", IsForeignKey=true)]
		public Disciplina Disciplina
		{
			get
			{
				return this._Disciplina.Entity;
			}
			set
			{
				Disciplina previousValue = this._Disciplina.Entity;
				if (((previousValue != value) 
							|| (this._Disciplina.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Disciplina.Entity = null;
						previousValue.MediasFinais.Remove(this);
					}
					this._Disciplina.Entity = value;
					if ((value != null))
					{
						value.MediasFinais.Add(this);
						this._DisciplinaId = value.Id;
					}
					else
					{
						this._DisciplinaId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Disciplina");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Notas")]
	public partial class Nota : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _AlunoId;
		
		private System.Nullable<int> _DisciplinaId;
		
		private string _Avaliacao;
		
		private System.Nullable<double> _Nota1;
		
		private System.Nullable<System.DateTime> _DataAvaliacao;
		
		private System.Nullable<int> _ProfessorId;
		
		private EntityRef<Aluno> _Aluno;
		
		private EntityRef<Disciplina> _Disciplina;
		
		private EntityRef<Professore> _Professore;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnAlunoIdChanging(System.Nullable<int> value);
    partial void OnAlunoIdChanged();
    partial void OnDisciplinaIdChanging(System.Nullable<int> value);
    partial void OnDisciplinaIdChanged();
    partial void OnAvaliacaoChanging(string value);
    partial void OnAvaliacaoChanged();
    partial void OnNota1Changing(System.Nullable<double> value);
    partial void OnNota1Changed();
    partial void OnDataAvaliacaoChanging(System.Nullable<System.DateTime> value);
    partial void OnDataAvaliacaoChanged();
    partial void OnProfessorIdChanging(System.Nullable<int> value);
    partial void OnProfessorIdChanged();
    #endregion
		
		public Nota()
		{
			this._Aluno = default(EntityRef<Aluno>);
			this._Disciplina = default(EntityRef<Disciplina>);
			this._Professore = default(EntityRef<Professore>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AlunoId", DbType="Int")]
		public System.Nullable<int> AlunoId
		{
			get
			{
				return this._AlunoId;
			}
			set
			{
				if ((this._AlunoId != value))
				{
					if (this._Aluno.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAlunoIdChanging(value);
					this.SendPropertyChanging();
					this._AlunoId = value;
					this.SendPropertyChanged("AlunoId");
					this.OnAlunoIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisciplinaId", DbType="Int")]
		public System.Nullable<int> DisciplinaId
		{
			get
			{
				return this._DisciplinaId;
			}
			set
			{
				if ((this._DisciplinaId != value))
				{
					if (this._Disciplina.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDisciplinaIdChanging(value);
					this.SendPropertyChanging();
					this._DisciplinaId = value;
					this.SendPropertyChanged("DisciplinaId");
					this.OnDisciplinaIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Avaliacao", DbType="NVarChar(50)")]
		public string Avaliacao
		{
			get
			{
				return this._Avaliacao;
			}
			set
			{
				if ((this._Avaliacao != value))
				{
					this.OnAvaliacaoChanging(value);
					this.SendPropertyChanging();
					this._Avaliacao = value;
					this.SendPropertyChanged("Avaliacao");
					this.OnAvaliacaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Nota", Storage="_Nota1", DbType="Float")]
		public System.Nullable<double> Nota1
		{
			get
			{
				return this._Nota1;
			}
			set
			{
				if ((this._Nota1 != value))
				{
					this.OnNota1Changing(value);
					this.SendPropertyChanging();
					this._Nota1 = value;
					this.SendPropertyChanged("Nota1");
					this.OnNota1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataAvaliacao", DbType="Date")]
		public System.Nullable<System.DateTime> DataAvaliacao
		{
			get
			{
				return this._DataAvaliacao;
			}
			set
			{
				if ((this._DataAvaliacao != value))
				{
					this.OnDataAvaliacaoChanging(value);
					this.SendPropertyChanging();
					this._DataAvaliacao = value;
					this.SendPropertyChanged("DataAvaliacao");
					this.OnDataAvaliacaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProfessorId", DbType="Int")]
		public System.Nullable<int> ProfessorId
		{
			get
			{
				return this._ProfessorId;
			}
			set
			{
				if ((this._ProfessorId != value))
				{
					if (this._Professore.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProfessorIdChanging(value);
					this.SendPropertyChanging();
					this._ProfessorId = value;
					this.SendPropertyChanged("ProfessorId");
					this.OnProfessorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Aluno_Nota", Storage="_Aluno", ThisKey="AlunoId", OtherKey="Id", IsForeignKey=true)]
		public Aluno Aluno
		{
			get
			{
				return this._Aluno.Entity;
			}
			set
			{
				Aluno previousValue = this._Aluno.Entity;
				if (((previousValue != value) 
							|| (this._Aluno.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Aluno.Entity = null;
						previousValue.Notas.Remove(this);
					}
					this._Aluno.Entity = value;
					if ((value != null))
					{
						value.Notas.Add(this);
						this._AlunoId = value.Id;
					}
					else
					{
						this._AlunoId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Aluno");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Disciplina_Nota", Storage="_Disciplina", ThisKey="DisciplinaId", OtherKey="Id", IsForeignKey=true)]
		public Disciplina Disciplina
		{
			get
			{
				return this._Disciplina.Entity;
			}
			set
			{
				Disciplina previousValue = this._Disciplina.Entity;
				if (((previousValue != value) 
							|| (this._Disciplina.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Disciplina.Entity = null;
						previousValue.Notas.Remove(this);
					}
					this._Disciplina.Entity = value;
					if ((value != null))
					{
						value.Notas.Add(this);
						this._DisciplinaId = value.Id;
					}
					else
					{
						this._DisciplinaId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Disciplina");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Professore_Nota", Storage="_Professore", ThisKey="ProfessorId", OtherKey="Id", IsForeignKey=true)]
		public Professore Professore
		{
			get
			{
				return this._Professore.Entity;
			}
			set
			{
				Professore previousValue = this._Professore.Entity;
				if (((previousValue != value) 
							|| (this._Professore.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Professore.Entity = null;
						previousValue.Notas.Remove(this);
					}
					this._Professore.Entity = value;
					if ((value != null))
					{
						value.Notas.Add(this);
						this._ProfessorId = value.Id;
					}
					else
					{
						this._ProfessorId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Professore");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ParticipacoesEvento")]
	public partial class ParticipacoesEvento : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _EventoId;
		
		private System.Nullable<int> _AlunoId;
		
		private System.Nullable<int> _ProfessorId;
		
		private EntityRef<Aluno> _Aluno;
		
		private EntityRef<Evento> _Evento;
		
		private EntityRef<Professore> _Professore;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnEventoIdChanging(System.Nullable<int> value);
    partial void OnEventoIdChanged();
    partial void OnAlunoIdChanging(System.Nullable<int> value);
    partial void OnAlunoIdChanged();
    partial void OnProfessorIdChanging(System.Nullable<int> value);
    partial void OnProfessorIdChanged();
    #endregion
		
		public ParticipacoesEvento()
		{
			this._Aluno = default(EntityRef<Aluno>);
			this._Evento = default(EntityRef<Evento>);
			this._Professore = default(EntityRef<Professore>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventoId", DbType="Int")]
		public System.Nullable<int> EventoId
		{
			get
			{
				return this._EventoId;
			}
			set
			{
				if ((this._EventoId != value))
				{
					if (this._Evento.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEventoIdChanging(value);
					this.SendPropertyChanging();
					this._EventoId = value;
					this.SendPropertyChanged("EventoId");
					this.OnEventoIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AlunoId", DbType="Int")]
		public System.Nullable<int> AlunoId
		{
			get
			{
				return this._AlunoId;
			}
			set
			{
				if ((this._AlunoId != value))
				{
					if (this._Aluno.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAlunoIdChanging(value);
					this.SendPropertyChanging();
					this._AlunoId = value;
					this.SendPropertyChanged("AlunoId");
					this.OnAlunoIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProfessorId", DbType="Int")]
		public System.Nullable<int> ProfessorId
		{
			get
			{
				return this._ProfessorId;
			}
			set
			{
				if ((this._ProfessorId != value))
				{
					if (this._Professore.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProfessorIdChanging(value);
					this.SendPropertyChanging();
					this._ProfessorId = value;
					this.SendPropertyChanged("ProfessorId");
					this.OnProfessorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Aluno_ParticipacoesEvento", Storage="_Aluno", ThisKey="AlunoId", OtherKey="Id", IsForeignKey=true)]
		public Aluno Aluno
		{
			get
			{
				return this._Aluno.Entity;
			}
			set
			{
				Aluno previousValue = this._Aluno.Entity;
				if (((previousValue != value) 
							|| (this._Aluno.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Aluno.Entity = null;
						previousValue.ParticipacoesEventos.Remove(this);
					}
					this._Aluno.Entity = value;
					if ((value != null))
					{
						value.ParticipacoesEventos.Add(this);
						this._AlunoId = value.Id;
					}
					else
					{
						this._AlunoId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Aluno");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Evento_ParticipacoesEvento", Storage="_Evento", ThisKey="EventoId", OtherKey="Id", IsForeignKey=true)]
		public Evento Evento
		{
			get
			{
				return this._Evento.Entity;
			}
			set
			{
				Evento previousValue = this._Evento.Entity;
				if (((previousValue != value) 
							|| (this._Evento.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Evento.Entity = null;
						previousValue.ParticipacoesEventos.Remove(this);
					}
					this._Evento.Entity = value;
					if ((value != null))
					{
						value.ParticipacoesEventos.Add(this);
						this._EventoId = value.Id;
					}
					else
					{
						this._EventoId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Evento");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Professore_ParticipacoesEvento", Storage="_Professore", ThisKey="ProfessorId", OtherKey="Id", IsForeignKey=true)]
		public Professore Professore
		{
			get
			{
				return this._Professore.Entity;
			}
			set
			{
				Professore previousValue = this._Professore.Entity;
				if (((previousValue != value) 
							|| (this._Professore.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Professore.Entity = null;
						previousValue.ParticipacoesEventos.Remove(this);
					}
					this._Professore.Entity = value;
					if ((value != null))
					{
						value.ParticipacoesEventos.Add(this);
						this._ProfessorId = value.Id;
					}
					else
					{
						this._ProfessorId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Professore");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Pautas")]
	public partial class Pauta : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _AlunoId;
		
		private System.Nullable<int> _TurmaId;
		
		private System.Nullable<System.DateTime> _DataCriacao;
		
		private string _Observacoes;
		
		private EntityRef<Aluno> _Aluno;
		
		private EntityRef<Turma> _Turma;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnAlunoIdChanging(System.Nullable<int> value);
    partial void OnAlunoIdChanged();
    partial void OnTurmaIdChanging(System.Nullable<int> value);
    partial void OnTurmaIdChanged();
    partial void OnDataCriacaoChanging(System.Nullable<System.DateTime> value);
    partial void OnDataCriacaoChanged();
    partial void OnObservacoesChanging(string value);
    partial void OnObservacoesChanged();
    #endregion
		
		public Pauta()
		{
			this._Aluno = default(EntityRef<Aluno>);
			this._Turma = default(EntityRef<Turma>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AlunoId", DbType="Int")]
		public System.Nullable<int> AlunoId
		{
			get
			{
				return this._AlunoId;
			}
			set
			{
				if ((this._AlunoId != value))
				{
					if (this._Aluno.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAlunoIdChanging(value);
					this.SendPropertyChanging();
					this._AlunoId = value;
					this.SendPropertyChanged("AlunoId");
					this.OnAlunoIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TurmaId", DbType="Int")]
		public System.Nullable<int> TurmaId
		{
			get
			{
				return this._TurmaId;
			}
			set
			{
				if ((this._TurmaId != value))
				{
					if (this._Turma.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTurmaIdChanging(value);
					this.SendPropertyChanging();
					this._TurmaId = value;
					this.SendPropertyChanged("TurmaId");
					this.OnTurmaIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataCriacao", DbType="Date")]
		public System.Nullable<System.DateTime> DataCriacao
		{
			get
			{
				return this._DataCriacao;
			}
			set
			{
				if ((this._DataCriacao != value))
				{
					this.OnDataCriacaoChanging(value);
					this.SendPropertyChanging();
					this._DataCriacao = value;
					this.SendPropertyChanged("DataCriacao");
					this.OnDataCriacaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Observacoes", DbType="NVarChar(255)")]
		public string Observacoes
		{
			get
			{
				return this._Observacoes;
			}
			set
			{
				if ((this._Observacoes != value))
				{
					this.OnObservacoesChanging(value);
					this.SendPropertyChanging();
					this._Observacoes = value;
					this.SendPropertyChanged("Observacoes");
					this.OnObservacoesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Aluno_Pauta", Storage="_Aluno", ThisKey="AlunoId", OtherKey="Id", IsForeignKey=true)]
		public Aluno Aluno
		{
			get
			{
				return this._Aluno.Entity;
			}
			set
			{
				Aluno previousValue = this._Aluno.Entity;
				if (((previousValue != value) 
							|| (this._Aluno.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Aluno.Entity = null;
						previousValue.Pautas.Remove(this);
					}
					this._Aluno.Entity = value;
					if ((value != null))
					{
						value.Pautas.Add(this);
						this._AlunoId = value.Id;
					}
					else
					{
						this._AlunoId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Aluno");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Turma_Pauta", Storage="_Turma", ThisKey="TurmaId", OtherKey="Id", IsForeignKey=true)]
		public Turma Turma
		{
			get
			{
				return this._Turma.Entity;
			}
			set
			{
				Turma previousValue = this._Turma.Entity;
				if (((previousValue != value) 
							|| (this._Turma.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Turma.Entity = null;
						previousValue.Pautas.Remove(this);
					}
					this._Turma.Entity = value;
					if ((value != null))
					{
						value.Pautas.Add(this);
						this._TurmaId = value.Id;
					}
					else
					{
						this._TurmaId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Turma");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProfessorDisciplina")]
	public partial class ProfessorDisciplina : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _ProfessorId;
		
		private System.Nullable<int> _DisciplinaId;
		
		private EntityRef<Disciplina> _Disciplina;
		
		private EntityRef<Professore> _Professore;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnProfessorIdChanging(System.Nullable<int> value);
    partial void OnProfessorIdChanged();
    partial void OnDisciplinaIdChanging(System.Nullable<int> value);
    partial void OnDisciplinaIdChanged();
    #endregion
		
		public ProfessorDisciplina()
		{
			this._Disciplina = default(EntityRef<Disciplina>);
			this._Professore = default(EntityRef<Professore>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProfessorId", DbType="Int")]
		public System.Nullable<int> ProfessorId
		{
			get
			{
				return this._ProfessorId;
			}
			set
			{
				if ((this._ProfessorId != value))
				{
					if (this._Professore.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProfessorIdChanging(value);
					this.SendPropertyChanging();
					this._ProfessorId = value;
					this.SendPropertyChanged("ProfessorId");
					this.OnProfessorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisciplinaId", DbType="Int")]
		public System.Nullable<int> DisciplinaId
		{
			get
			{
				return this._DisciplinaId;
			}
			set
			{
				if ((this._DisciplinaId != value))
				{
					if (this._Disciplina.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDisciplinaIdChanging(value);
					this.SendPropertyChanging();
					this._DisciplinaId = value;
					this.SendPropertyChanged("DisciplinaId");
					this.OnDisciplinaIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Disciplina_ProfessorDisciplina", Storage="_Disciplina", ThisKey="DisciplinaId", OtherKey="Id", IsForeignKey=true)]
		public Disciplina Disciplina
		{
			get
			{
				return this._Disciplina.Entity;
			}
			set
			{
				Disciplina previousValue = this._Disciplina.Entity;
				if (((previousValue != value) 
							|| (this._Disciplina.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Disciplina.Entity = null;
						previousValue.ProfessorDisciplinas.Remove(this);
					}
					this._Disciplina.Entity = value;
					if ((value != null))
					{
						value.ProfessorDisciplinas.Add(this);
						this._DisciplinaId = value.Id;
					}
					else
					{
						this._DisciplinaId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Disciplina");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Professore_ProfessorDisciplina", Storage="_Professore", ThisKey="ProfessorId", OtherKey="Id", IsForeignKey=true)]
		public Professore Professore
		{
			get
			{
				return this._Professore.Entity;
			}
			set
			{
				Professore previousValue = this._Professore.Entity;
				if (((previousValue != value) 
							|| (this._Professore.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Professore.Entity = null;
						previousValue.ProfessorDisciplinas.Remove(this);
					}
					this._Professore.Entity = value;
					if ((value != null))
					{
						value.ProfessorDisciplinas.Add(this);
						this._ProfessorId = value.Id;
					}
					else
					{
						this._ProfessorId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Professore");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProfessorTurma")]
	public partial class ProfessorTurma : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _ProfessorId;
		
		private System.Nullable<int> _TurmaId;
		
		private EntityRef<Turma> _Turma;
		
		private EntityRef<Professore> _Professore;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnProfessorIdChanging(System.Nullable<int> value);
    partial void OnProfessorIdChanged();
    partial void OnTurmaIdChanging(System.Nullable<int> value);
    partial void OnTurmaIdChanged();
    #endregion
		
		public ProfessorTurma()
		{
			this._Turma = default(EntityRef<Turma>);
			this._Professore = default(EntityRef<Professore>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProfessorId", DbType="Int")]
		public System.Nullable<int> ProfessorId
		{
			get
			{
				return this._ProfessorId;
			}
			set
			{
				if ((this._ProfessorId != value))
				{
					if (this._Professore.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProfessorIdChanging(value);
					this.SendPropertyChanging();
					this._ProfessorId = value;
					this.SendPropertyChanged("ProfessorId");
					this.OnProfessorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TurmaId", DbType="Int")]
		public System.Nullable<int> TurmaId
		{
			get
			{
				return this._TurmaId;
			}
			set
			{
				if ((this._TurmaId != value))
				{
					if (this._Turma.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTurmaIdChanging(value);
					this.SendPropertyChanging();
					this._TurmaId = value;
					this.SendPropertyChanged("TurmaId");
					this.OnTurmaIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Turma_ProfessorTurma", Storage="_Turma", ThisKey="TurmaId", OtherKey="Id", IsForeignKey=true)]
		public Turma Turma
		{
			get
			{
				return this._Turma.Entity;
			}
			set
			{
				Turma previousValue = this._Turma.Entity;
				if (((previousValue != value) 
							|| (this._Turma.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Turma.Entity = null;
						previousValue.ProfessorTurmas.Remove(this);
					}
					this._Turma.Entity = value;
					if ((value != null))
					{
						value.ProfessorTurmas.Add(this);
						this._TurmaId = value.Id;
					}
					else
					{
						this._TurmaId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Turma");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Professore_ProfessorTurma", Storage="_Professore", ThisKey="ProfessorId", OtherKey="Id", IsForeignKey=true)]
		public Professore Professore
		{
			get
			{
				return this._Professore.Entity;
			}
			set
			{
				Professore previousValue = this._Professore.Entity;
				if (((previousValue != value) 
							|| (this._Professore.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Professore.Entity = null;
						previousValue.ProfessorTurmas.Remove(this);
					}
					this._Professore.Entity = value;
					if ((value != null))
					{
						value.ProfessorTurmas.Add(this);
						this._ProfessorId = value.Id;
					}
					else
					{
						this._ProfessorId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Professore");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Turmas")]
	public partial class Turma : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Nome;
		
		private string _AnoLetivo;
		
		private string _Curso;
		
		private string _Turno;
		
		private EntitySet<Aluno> _Alunos;
		
		private EntitySet<DisciplinaTurma> _DisciplinaTurmas;
		
		private EntitySet<Horario> _Horarios;
		
		private EntitySet<Pauta> _Pautas;
		
		private EntitySet<ProfessorTurma> _ProfessorTurmas;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNomeChanging(string value);
    partial void OnNomeChanged();
    partial void OnAnoLetivoChanging(string value);
    partial void OnAnoLetivoChanged();
    partial void OnCursoChanging(string value);
    partial void OnCursoChanged();
    partial void OnTurnoChanging(string value);
    partial void OnTurnoChanged();
    #endregion
		
		public Turma()
		{
			this._Alunos = new EntitySet<Aluno>(new Action<Aluno>(this.attach_Alunos), new Action<Aluno>(this.detach_Alunos));
			this._DisciplinaTurmas = new EntitySet<DisciplinaTurma>(new Action<DisciplinaTurma>(this.attach_DisciplinaTurmas), new Action<DisciplinaTurma>(this.detach_DisciplinaTurmas));
			this._Horarios = new EntitySet<Horario>(new Action<Horario>(this.attach_Horarios), new Action<Horario>(this.detach_Horarios));
			this._Pautas = new EntitySet<Pauta>(new Action<Pauta>(this.attach_Pautas), new Action<Pauta>(this.detach_Pautas));
			this._ProfessorTurmas = new EntitySet<ProfessorTurma>(new Action<ProfessorTurma>(this.attach_ProfessorTurmas), new Action<ProfessorTurma>(this.detach_ProfessorTurmas));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nome", DbType="NVarChar(50)")]
		public string Nome
		{
			get
			{
				return this._Nome;
			}
			set
			{
				if ((this._Nome != value))
				{
					this.OnNomeChanging(value);
					this.SendPropertyChanging();
					this._Nome = value;
					this.SendPropertyChanged("Nome");
					this.OnNomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnoLetivo", DbType="NVarChar(20)")]
		public string AnoLetivo
		{
			get
			{
				return this._AnoLetivo;
			}
			set
			{
				if ((this._AnoLetivo != value))
				{
					this.OnAnoLetivoChanging(value);
					this.SendPropertyChanging();
					this._AnoLetivo = value;
					this.SendPropertyChanged("AnoLetivo");
					this.OnAnoLetivoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Curso", DbType="NVarChar(100)")]
		public string Curso
		{
			get
			{
				return this._Curso;
			}
			set
			{
				if ((this._Curso != value))
				{
					this.OnCursoChanging(value);
					this.SendPropertyChanging();
					this._Curso = value;
					this.SendPropertyChanged("Curso");
					this.OnCursoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Turno", DbType="NVarChar(20)")]
		public string Turno
		{
			get
			{
				return this._Turno;
			}
			set
			{
				if ((this._Turno != value))
				{
					this.OnTurnoChanging(value);
					this.SendPropertyChanging();
					this._Turno = value;
					this.SendPropertyChanged("Turno");
					this.OnTurnoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Turma_Aluno", Storage="_Alunos", ThisKey="Id", OtherKey="TurmaId")]
		public EntitySet<Aluno> Alunos
		{
			get
			{
				return this._Alunos;
			}
			set
			{
				this._Alunos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Turma_DisciplinaTurma", Storage="_DisciplinaTurmas", ThisKey="Id", OtherKey="TurmaId")]
		public EntitySet<DisciplinaTurma> DisciplinaTurmas
		{
			get
			{
				return this._DisciplinaTurmas;
			}
			set
			{
				this._DisciplinaTurmas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Turma_Horario", Storage="_Horarios", ThisKey="Id", OtherKey="TurmaId")]
		public EntitySet<Horario> Horarios
		{
			get
			{
				return this._Horarios;
			}
			set
			{
				this._Horarios.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Turma_Pauta", Storage="_Pautas", ThisKey="Id", OtherKey="TurmaId")]
		public EntitySet<Pauta> Pautas
		{
			get
			{
				return this._Pautas;
			}
			set
			{
				this._Pautas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Turma_ProfessorTurma", Storage="_ProfessorTurmas", ThisKey="Id", OtherKey="TurmaId")]
		public EntitySet<ProfessorTurma> ProfessorTurmas
		{
			get
			{
				return this._ProfessorTurmas;
			}
			set
			{
				this._ProfessorTurmas.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Alunos(Aluno entity)
		{
			this.SendPropertyChanging();
			entity.Turma = this;
		}
		
		private void detach_Alunos(Aluno entity)
		{
			this.SendPropertyChanging();
			entity.Turma = null;
		}
		
		private void attach_DisciplinaTurmas(DisciplinaTurma entity)
		{
			this.SendPropertyChanging();
			entity.Turma = this;
		}
		
		private void detach_DisciplinaTurmas(DisciplinaTurma entity)
		{
			this.SendPropertyChanging();
			entity.Turma = null;
		}
		
		private void attach_Horarios(Horario entity)
		{
			this.SendPropertyChanging();
			entity.Turma = this;
		}
		
		private void detach_Horarios(Horario entity)
		{
			this.SendPropertyChanging();
			entity.Turma = null;
		}
		
		private void attach_Pautas(Pauta entity)
		{
			this.SendPropertyChanging();
			entity.Turma = this;
		}
		
		private void detach_Pautas(Pauta entity)
		{
			this.SendPropertyChanging();
			entity.Turma = null;
		}
		
		private void attach_ProfessorTurmas(ProfessorTurma entity)
		{
			this.SendPropertyChanging();
			entity.Turma = this;
		}
		
		private void detach_ProfessorTurmas(ProfessorTurma entity)
		{
			this.SendPropertyChanging();
			entity.Turma = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Professores")]
	public partial class Professore : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Nome;
		
		private string _Contacto;
		
		private string _Email;
		
		private string _AreaEnsino;
		
		private EntitySet<Horario> _Horarios;
		
		private EntitySet<Nota> _Notas;
		
		private EntitySet<ParticipacoesEvento> _ParticipacoesEventos;
		
		private EntitySet<ProfessorDisciplina> _ProfessorDisciplinas;
		
		private EntitySet<ProfessorTurma> _ProfessorTurmas;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNomeChanging(string value);
    partial void OnNomeChanged();
    partial void OnContactoChanging(string value);
    partial void OnContactoChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnAreaEnsinoChanging(string value);
    partial void OnAreaEnsinoChanged();
    #endregion
		
		public Professore()
		{
			this._Horarios = new EntitySet<Horario>(new Action<Horario>(this.attach_Horarios), new Action<Horario>(this.detach_Horarios));
			this._Notas = new EntitySet<Nota>(new Action<Nota>(this.attach_Notas), new Action<Nota>(this.detach_Notas));
			this._ParticipacoesEventos = new EntitySet<ParticipacoesEvento>(new Action<ParticipacoesEvento>(this.attach_ParticipacoesEventos), new Action<ParticipacoesEvento>(this.detach_ParticipacoesEventos));
			this._ProfessorDisciplinas = new EntitySet<ProfessorDisciplina>(new Action<ProfessorDisciplina>(this.attach_ProfessorDisciplinas), new Action<ProfessorDisciplina>(this.detach_ProfessorDisciplinas));
			this._ProfessorTurmas = new EntitySet<ProfessorTurma>(new Action<ProfessorTurma>(this.attach_ProfessorTurmas), new Action<ProfessorTurma>(this.detach_ProfessorTurmas));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nome", DbType="NVarChar(100)")]
		public string Nome
		{
			get
			{
				return this._Nome;
			}
			set
			{
				if ((this._Nome != value))
				{
					this.OnNomeChanging(value);
					this.SendPropertyChanging();
					this._Nome = value;
					this.SendPropertyChanged("Nome");
					this.OnNomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Contacto", DbType="NVarChar(20)")]
		public string Contacto
		{
			get
			{
				return this._Contacto;
			}
			set
			{
				if ((this._Contacto != value))
				{
					this.OnContactoChanging(value);
					this.SendPropertyChanging();
					this._Contacto = value;
					this.SendPropertyChanged("Contacto");
					this.OnContactoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(100)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AreaEnsino", DbType="NVarChar(100)")]
		public string AreaEnsino
		{
			get
			{
				return this._AreaEnsino;
			}
			set
			{
				if ((this._AreaEnsino != value))
				{
					this.OnAreaEnsinoChanging(value);
					this.SendPropertyChanging();
					this._AreaEnsino = value;
					this.SendPropertyChanged("AreaEnsino");
					this.OnAreaEnsinoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Professore_Horario", Storage="_Horarios", ThisKey="Id", OtherKey="ProfessorId")]
		public EntitySet<Horario> Horarios
		{
			get
			{
				return this._Horarios;
			}
			set
			{
				this._Horarios.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Professore_Nota", Storage="_Notas", ThisKey="Id", OtherKey="ProfessorId")]
		public EntitySet<Nota> Notas
		{
			get
			{
				return this._Notas;
			}
			set
			{
				this._Notas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Professore_ParticipacoesEvento", Storage="_ParticipacoesEventos", ThisKey="Id", OtherKey="ProfessorId")]
		public EntitySet<ParticipacoesEvento> ParticipacoesEventos
		{
			get
			{
				return this._ParticipacoesEventos;
			}
			set
			{
				this._ParticipacoesEventos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Professore_ProfessorDisciplina", Storage="_ProfessorDisciplinas", ThisKey="Id", OtherKey="ProfessorId")]
		public EntitySet<ProfessorDisciplina> ProfessorDisciplinas
		{
			get
			{
				return this._ProfessorDisciplinas;
			}
			set
			{
				this._ProfessorDisciplinas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Professore_ProfessorTurma", Storage="_ProfessorTurmas", ThisKey="Id", OtherKey="ProfessorId")]
		public EntitySet<ProfessorTurma> ProfessorTurmas
		{
			get
			{
				return this._ProfessorTurmas;
			}
			set
			{
				this._ProfessorTurmas.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Horarios(Horario entity)
		{
			this.SendPropertyChanging();
			entity.Professore = this;
		}
		
		private void detach_Horarios(Horario entity)
		{
			this.SendPropertyChanging();
			entity.Professore = null;
		}
		
		private void attach_Notas(Nota entity)
		{
			this.SendPropertyChanging();
			entity.Professore = this;
		}
		
		private void detach_Notas(Nota entity)
		{
			this.SendPropertyChanging();
			entity.Professore = null;
		}
		
		private void attach_ParticipacoesEventos(ParticipacoesEvento entity)
		{
			this.SendPropertyChanging();
			entity.Professore = this;
		}
		
		private void detach_ParticipacoesEventos(ParticipacoesEvento entity)
		{
			this.SendPropertyChanging();
			entity.Professore = null;
		}
		
		private void attach_ProfessorDisciplinas(ProfessorDisciplina entity)
		{
			this.SendPropertyChanging();
			entity.Professore = this;
		}
		
		private void detach_ProfessorDisciplinas(ProfessorDisciplina entity)
		{
			this.SendPropertyChanging();
			entity.Professore = null;
		}
		
		private void attach_ProfessorTurmas(ProfessorTurma entity)
		{
			this.SendPropertyChanging();
			entity.Professore = this;
		}
		
		private void detach_ProfessorTurmas(ProfessorTurma entity)
		{
			this.SendPropertyChanging();
			entity.Professore = null;
		}
	}
}
#pragma warning restore 1591
